{
  "name": "rust-analyzer",
  "languageId": "rust",
  "command": ["rust-analyzer"],
  "settings": {},
  "initializationOptions": {
    "cargoRunner": null,
    "runnableEnv": null,
    "server": {
      "path": null,
      "extraEnv": null
    },
    "trace": {
      "server": "verbose",
      "extension": false
    },
    "debug": {
      "engine": "auto",
      "sourceFileMap": {
        "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
      },
      "openDebugPane": false,
      "engineSettings": {}
    },
    "restartServerOnConfigChange": false,
    "typing": {
      "continueCommentsOnNewline": true,
      "autoClosingAngleBrackets": {
        "enable": false
      }
    },
    "diagnostics": {
      "previewRustcOutput": false,
      "useRustcErrorCode": false,
      "disabled": [],
      "enable": true,
      "experimental": {
        "enable": false
      },
      "remapPrefix": {},
      "warningsAsHint": [],
      "warningsAsInfo": []
    },
    "discoverProjectCommand": null,
    "assist": {
      "emitMustUse": false,
      "expressionFillDefault": "todo"
    },
    "cachePriming": {
      "enable": true,
      "numThreads": 0
    },
    "cargo": {
      "autoreload": true,
      "buildScripts": {
        "enable": true,
        "invocationLocation": "workspace",
        "invocationStrategy": "per_workspace",
        "overrideCommand": null,
        "useRustcWrapper": true
      },
      "extraArgs": [],
      "extraEnv": {
        "RA_LOG": "info"
      },
      "features": [],
      "noDefaultFeatures": false,
      "sysroot": "discover",
      "sysrootSrc": null,
      "target": null,
      "unsetTest": [
        "core"
      ]
    },
    "checkOnSave": true,
    "check": {
      "allTargets": false,
      "command": "check",
      "extraArgs": [],
      "extraEnv": {},
      "features": null,
      "invocationLocation": "workspace",
      "invocationStrategy": "per_workspace",
      "noDefaultFeatures": null,
      "overrideCommand": null,
      "targets": null
    },
    "completion": {
      "autoimport": {
        "enable": true
      },
      "autoself": {
        "enable": true
      },
      "callable": {
        "snippets": "fill_arguments"
      },
      "limit": null,
      "postfix": {
        "enable": true
      },
      "privateEditable": {
        "enable": false
      },
      "snippets": {
        "custom": {
          "Arc::new": {
            "postfix": "arc",
            "body": "Arc::new(${receiver})",
            "requires": "std::sync::Arc",
            "description": "Put the expression into an `Arc`",
            "scope": "expr"
          },
          "Rc::new": {
            "postfix": "rc",
            "body": "Rc::new(${receiver})",
            "requires": "std::rc::Rc",
            "description": "Put the expression into an `Rc`",
            "scope": "expr"
          },
          "Box::pin": {
            "postfix": "pinbox",
            "body": "Box::pin(${receiver})",
            "requires": "std::boxed::Box",
            "description": "Put the expression into a pinned `Box`",
            "scope": "expr"
          },
          "Ok": {
            "postfix": "ok",
            "body": "Ok(${receiver})",
            "description": "Wrap the expression in a `Result::Ok`",
            "scope": "expr"
          },
          "Err": {
            "postfix": "err",
            "body": "Err(${receiver})",
            "description": "Wrap the expression in a `Result::Err`",
            "scope": "expr"
          },
          "Some": {
            "postfix": "some",
            "body": "Some(${receiver})",
            "description": "Wrap the expression in an `Option::Some`",
            "scope": "expr"
          }
        }
      }
    },
    "files": {
      "excludeDirs": [],
      "watcher": "client"
    },
    "highlightRelated": {
      "breakPoints": {
        "enable": true
      },
      "exitPoints": {
        "enable": true
      },
      "references": {
        "enable": true
      },
      "yieldPoints": {
        "enable": true
      }
    },
    "hover": {
      "actions": {
        "debug": {
          "enable": true
        },
        "enable": true,
        "gotoTypeDef": {
          "enable": true
        },
        "implementations": {
          "enable": true
        },
        "references": {
          "enable": false
        },
        "run": {
          "enable": true
        }
      },
      "documentation": {
        "enable": true,
        "keywords": {
          "enable": true
        }
      },
      "links": {
        "enable": true
      }
    },
    "imports": {
      "granularity": {
        "enforce": false,
        "group": "crate"
      },
      "group": {
        "enable": true
      },
      "merge": {
        "glob": true
      },
      "prefer": {
        "no": {
          "std": false
        }
      },
      "prefix": "plain"
    },
    "inlayHints": {
      "bindingModeHints": {
        "enable": false
      },
      "chainingHints": {
        "enable": true
      },
      "closingBraceHints": {
        "enable": true,
        "minLines": 25
      },
      "closureReturnTypeHints": {
        "enable": "never"
      },
      "discriminantHints": {
        "enable": "never"
      },
      "expressionAdjustmentHints": {
        "enable": "never",
        "hideOutsideUnsafe": false,
        "mode": "prefix"
      },
      "lifetimeElisionHints": {
        "enable": "never",
        "useParameterNames": false
      },
      "maxLength": 25,
      "parameterHints": {
        "enable": true
      },
      "reborrowHints": {
        "enable": "never"
      },
      "renderColons": true,
      "typeHints": {
        "enable": true,
        "hideClosureInitialization": false,
        "hideNamedConstructor": false
      }
    },
    "interpret": {
      "tests": false
    },
    "joinLines": {
      "joinAssignments": true,
      "joinElseIf": true,
      "removeTrailingComma": true,
            "unwrapTrivialBlock": true
        },
        "lens": {
            "debug": {
                "enable": true
            },
            "enable": true,
            "forceCustomCommands": true,
            "implementations": {
                "enable": true
            },
            "location": "above_name",
            "references": {
                "adt": {
                    "enable": false
                },
                "enumVariant": {
                    "enable": false
                },
                "method": {
                    "enable": false
                },
                "trait": {
                    "enable": false
                }
            },
            "run": {
                "enable": true
            }
        },
        "linkedProjects": [],
        "lru": {
            "capacity": null
        },
        "notifications": {
            "cargoTomlNotFound": true
        },
        "numThreads": null,
        "procMacro": {
            "attributes": {
                "enable": true
            },
            "enable": true,
            "ignored": {},
            "server": null
        },
        "references": {
            "excludeImports": false
        },
        "runnables": {
            "command": null,
            "extraArgs": []
        },
        "rustc": {
            "source": null
        },
        "rustfmt": {
            "extraArgs": [],
            "overrideCommand": null,
            "rangeFormatting": {
                "enable": false
            }
        },
        "semanticHighlighting": {
            "doc": {
                "comment": {
                    "inject": {
                        "enable": true
                    }
                }
            },
            "operator": {
                "enable": true,
                "specialization": {
                    "enable": false
                }
            },
            "punctuation": {
                "enable": false,
                "separate": {
                    "macro": {
                        "bang": false
                    }
                },
                "specialization": {
                    "enable": false
                }
            },
            "strings": {
                "enable": true
            }
        },
        "signatureInfo": {
            "detail": "full",
            "documentation": {
                "enable": true
            }
        },
        "workspace": {
            "symbol": {
                "search": {
                    "kind": "only_types",
                    "limit": 128,
                    "scope": "workspace"
                }
            }
        }
    }
}
